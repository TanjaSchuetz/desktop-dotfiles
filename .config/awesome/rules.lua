---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by stira.
--- DateTime: 13.05.20 11:08
---

-- Standard Definitions
require("definitions")

-- Standard awesome library
local awful       = require("awful")

-- Theme handling library
local beautiful   = require("beautiful")

-- {{{ Rules
-- Rules to apply to new clients (through the "manage" signal).
awful.rules.rules = {

  -- All clients will match this rule.
  {
    rule       = {},
    properties = {
      border_width = beautiful.border_width,
      border_color = beautiful.border_normal,
      focus        = awful.client.focus.filter,
      raise        = true,
      keys         = clientkeys,
      buttons      = clientbuttons,
      screen       = awful.screen.preferred,
      placement    = awful.placement.no_overlap + awful.placement.no_offscreen,
      --size_hints_honor = true,
      --opacity          = 1
    }
  },

  -- Floating clients.
  {
    rule_any   = {
      instance = {
        "copyq",
      },
      class    = {
        "Pamac-manager",
        "VirtualBox Manager",
        "xfce4-taskmanager",
        "GParted",
        "gnome-calculator",
        "Lxappearance",
        "Lightdm-gtk-greeter-settings",
        "Lightdm-settings",
        "Manjaro Settings Manager",
        "Nitrogen",
        "Pavucontrol",
        "Spotify",
        "Timeset-gui",
        "octopi",
        "qt5ct",
        "Grub Customizer",
        "JetBrains Toolbox"
      },

      -- Note that the name property shown in xprop might be set slightly after creation of the client
      -- and the name shown there might not match defined rules here.
      name     = {
        "Taskmanager",
        "Taschenrechner",
        "BMenu"
        -- xev.
      },
      role     = {
        "AlarmWindow", -- Thunderbird's calendar.
        "ConfigManager", -- Thunderbird's about:config.
        "pop-up" -- e.g. Google Chrome's (detached) Developer Tools.
      }
    },
    properties = {
      floating = true
    }
  },

  -- opacity clients.
  {
    rule_any   = {
      instance = {
        "copyq",
      },
      class    = {
        "Alacritty",
      },

      -- Note that the name property shown in xprop might be set slightly after creation of the client
      -- and the name shown there might not match defined rules here.
      name     = {
        "Taskmanager",
        "Taschenrechner",
        "BMenu",
        "Rofi",
        "rofi"
        -- xev.
      },
      role     = {
        "pop-up" -- e.g. Google Chrome's (detached) Developer Tools.
      }
    },
    properties = {
      opacity = 0.7 }
  },

  -- Add titlebars to normal clients and dialogs
  {
    rule_any   = { type = { "normal", "dialog" } },
    properties = { titlebars_enabled = true }
  },

  -- Set Apps for Web Tag.
  {
    rule_any   = {
      class = {
        "Firefox",
        "Google-chrome",
        "Opera"
      }
    },
    properties = { screen = 2, tag = tag_Web }
  },

  -- Set Apps for Developer Tag.
  {
    rule_any   = {
      class = {
        "jetbrains-webstorm",
        "jetbrains-rider",
        "jetbrains-datagrip"
      }
    },
    properties = { screen = 1, tag = tag_Develop }
  },

  -- Set Apps for Developer Console Tag.
  {
    rule_any   = {
      class = {
        "Chromium"
      }
    },
    properties = { screen = 2, tag = tag_DevConsole }
  },

  -- Set Apps for Status Tag.
  {
    rule_any   = {
      class = {
        "Gnome-system-monitor"
      }
    },
    properties = { screen = 2, tag = tag_Status }
  },

  -- Set Apps for Teams Tag.
  {
    rule_any   = {
      class = {
        "Microsoft Teams - Preview"
      }
    },
    properties = { screen = 2, tag = tag_Teams }
  },

  -- Set Apps for VM Tag.
  {
    rule_any   = {
      class = {
        "VirtualBox Manager",
        "VirtualBox Machine",
      }
    },
    properties = { screen = 1, tag = tag_VM }
  },

  -- Set Apps for Admin Tag.
  {
    rule_any   = {
      name = {
        "BMenu"
      }
    },
    properties = { screen = 1, tag = tag_Admin }
  },

  -- Set Apps for Media Tag.
  {
    rule_any   = {
      class = {
        "Spotify"
      }
    },
    properties = { screen = 2, tag = tag_Media }
  }
}
-- }}}
